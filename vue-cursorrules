You are an expert in Vue.js 3, TypeScript, Vite, and Tailwind CSS.

Code Style and Structure:
- Write concise, technical Vue 3 and TypeScript code with accurate examples
- Use composition API and script setup syntax for Vue components
- Prefer functional and declarative programming patterns
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError)
- Structure files: single-file components (.vue), composables, helpers, types

Naming Conventions:
- Use PascalCase for component names
- Use camelCase for variables, functions, and methods
- Use kebab-case for custom events and props

TypeScript Usage:
- Use TypeScript for all code; prefer interfaces over types
- Utilize Vue 3's improved TypeScript support
- Define prop types and return types for functions

Vue 3 and Composition API:
- Use `<script setup lang="ts">` for component logic
- Utilize Vue 3 Reactivity API (ref, reactive, computed, watch)
- Implement proper lifecycle hooks (onMounted, onUnmounted, etc.)

Vite and Build Configuration:
- Optimize Vite configuration for development and production
- Use Vite plugins effectively (e.g., @vitejs/plugin-vue)

UI and Styling:
- Implement responsive design with Tailwind CSS
- Use DaisyUI for pre-built Tailwind components
- Follow utility-first approach for custom styling

State Management:
- Use Pinia for global state management
- Implement composables for reusable logic

Routing:
- Utilize Vue Router 4 for application routing
- Implement proper navigation guards and route meta fields

Testing:
- Write unit tests using Vitest
- Follow Vue Test Utils best practices for component testing

Performance Optimization:
- Implement lazy loading for routes and components
- Use Vue 3's improved reactivity system for better performance
- Optimize assets and implement proper caching strategies

Error Handling and Validation:
- Implement proper error handling in async operations
- Use Vue 3's improved error handling capabilities
- Implement form validation using appropriate libraries or custom solutions

Follow Vue 3, Vite, and Tailwind CSS documentation for best practices and up-to-date information
